name: OpenWrt-Lienol-CI

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
  schedule:
    - cron: 0 2,14 * * *

env:
  CONFIG_FILE: openwrt_coolsnowwolf.config


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 curl gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          rm -rf openwrt

      - name: Clone source code
        run: |
          echo "src-git openclash https://github.com/vernesong/OpenClash.git" >> feeds.conf.default
          cd openwrt

      - name: Load basic configuration
        run: |
          cd openwrt
          git clone -b luci https://github.com/xiaorouji/openwrt-passwall.git package/luci-app-passwall

      - name: Update feeds
        run: |
          cd openwrt
          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Load custom configuration
        run: |
          [ -e $CONFIG_FILE ] && cat $CONFIG_FILE >> openwrt/.config
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-openclash=y
          EOF
      - name: Generate configuration file
        run: |
          cd openwrt
          make defconfig

      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(($(nproc) + 1)) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          cd openwrt
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      # - name: Convert IMG
      #   run: |
      #     sudo -E apt-get -y install qemu-utils
      #     cd openwrt/bin/targets/x86/64/
      #     #qemu-img convert -f raw -O vhdx -o subformat=dynamic openwrt-x86-64-generic-squashfs-rootfs.img openwrt-x86-64-generic-squashfs-rootfs.vhdx
      #     qemu-img convert -f raw -O vhdx -o subformat=dynamic openwrt-x86-64-generic-squashfs-combined-efi.img openwrt-x86-64-generic-squashfs-combined-efi.vhdx
    
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./openwrt/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./openwrt/artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./openwrt/bin/targets/
