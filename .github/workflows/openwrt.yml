name: OpenWrt

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
  schedule:
    - cron: 0 0,6,12,18 * * *

env:
  CONFIG_FILE: seed.config
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
          
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          rm -rf openwrt
      - name: Clone source code
        run: |
          git clone https://github.com/coolsnowwolf/lede
          mv lede openwrt
          cd openwrt
          mkdir package/luci-app-openclash
          git clone --depth=1 https://github.com/vernesong/OpenClash.git package/luci-app-openclash
          rm -rf package/lean/luci-theme-argon/
          git clone https://github.com/jerrykuku/luci-theme-argon.git  package/lean/luci-theme-argon

      - name: Load basic configuration
        run: |

          cd openwrt/
          echo "src-git helloworld https://github.com/fw876/helloworld"  >> feeds.conf.default
      
      - name: Update feeds
        run: |
          cd openwrt/
          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Load custom configuration
        run: |
          [ -e $CONFIG_FILE ] && cat $CONFIG_FILE >> openwrt/.config
    
    
      
      - name: Generate configuration file
        run: |
          cd openwrt
          make defconfig
      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          cd openwrt/
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: find /home/runner/work/action/action/openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}
      - name: Convert IMG
        run: |
          sudo -E apt-get -y install qemu-utils
          cd openwrt/bin/targets/x86/64/
          #qemu-img convert -f raw -O vhdx -o subformat=dynamic openwrt-x86-64-generic-squashfs-rootfs.img openwrt-x86-64-generic-squashfs-rootfs.vhdx
          qemu-img convert -f raw -O vhdx -o subformat=dynamic openwrt-x86-64-generic-squashfs-combined-efi.img openwrt-x86-64-generic-squashfs-combined-efi.vhdx
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: LEDE firmware
          path: openwrt/bin/targets/
